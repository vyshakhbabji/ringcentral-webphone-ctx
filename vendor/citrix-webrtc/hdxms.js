Object.defineProperty(exports,"__esModule",{value:!0});var proxyobject_1=require("./proxyobject"),logger_1=require("./logger"),webrpcclassinfo_1=require("./webrpcclassinfo"),wsjsonutil_1=require("./wsjsonutil"),completion=function(){return function(a, c, e, b, g, d, f){this.resolve=a;this.reject=c;this.iid=e;this.oid=b;this.cbid=g;this.oneShot=d;this.mid=f}}(),RedirectionStatus;
(function(a){a[a.NotRedirected=0]="NotRedirected";a[a.Connecting=1]="Connecting";a[a.Binding=2]="Binding";a[a.Redirected=3]="Redirected"})(RedirectionStatus=exports.RedirectionStatus||(exports.RedirectionStatus={}));
var HdxMediaStream=function(){function a(){this.pingactive=!1;this.status=RedirectionStatus.NotRedirected;this.reqs=[];this.cbs=[];this.deferredActions=[]}a.prototype.setRemoteSessionInfoCb=function(c){this.remoteSessionInfoCb=c};a.prototype.setFeatures=function(c){this.features=c};a.prototype.onRedirectionComplete=function(){for(;this.deferredActions&&0<this.deferredActions.length;)this.deferredActions.shift().post(this.status==RedirectionStatus.Redirected)};a.prototype.connectToService=function(){logger_1.logger.log("Redirection status: Connecting...");
this.status=RedirectionStatus.Connecting;return new Promise(function(c,e){var b=new WebSocket("wss://127.0.0.1:9002");b.onopen=function(){c(b)};b.onerror=function(b){logger_1.logger.log("websocket connection error: "+b.type);e(b)}})};a.prototype.waitUntilRedirected=function(c){var e=this;return new Promise(function(b,a){e.status==RedirectionStatus.Redirected?b():0>=c?a():setTimeout(function(){logger_1.logger.log("waitUntilRedirected() timeout. count="+c);e.status!=RedirectionStatus.Redirected?e.waitUntilRedirected(--c).then(function(){b()})["catch"](function(){a()}):
b()},2E3)})};a.prototype.handleRemoteSessionInfo=function(){logger_1.logger.log("handleRemoteSessionInfo called.");var c=this;c.remoteSessionInfoCb?c.remoteSessionInfoCb().then(function(e){logger_1.logger.log("remoteSessionInfo success! info:"+JSON.stringify(e));logger_1.logger.log("Redirection status: Redirected");c.status=RedirectionStatus.Redirected;c.pingConnectionEnd();(0,window.onVdiClientConnected)();c.onRedirectionComplete()})["catch"](function(){logger_1.logger.log("remoteSessionInfo failure!");
c.suspendRedirection(!0);c.onRedirectionComplete()}):(logger_1.logger.log("remoteSessionInfoCb is invalid!"),c.suspendRedirection(!0),c.onRedirectionComplete())};a.prototype.startRedirection=function(c,e){var b=this,a=window.onVdiUnableToRemote;return new Promise(function(d,f){b.status==RedirectionStatus.NotRedirected?(logger_1.logger.log("Attempting to start redirection: "+e),0==c?b.deferredActions.push(new proxyobject_1.deferred_action(d,f,e)):b.connectToService().then(function(c){logger_1.logger.log("Redirection status: Binding...");
b.status=RedirectionStatus.Binding;b.websocket=c;b.websocket.onmessage=function(c){b.onWSMessage(c)};b.websocket.onclose=function(c){b.onWSClose(c)};d();b.handleRemoteSessionInfo()})["catch"](function(c){logger_1.logger.log("Unable to connect to websocket service!");f();b.suspendRedirection(!0);b.onRedirectionComplete();a()})):b.status==RedirectionStatus.Connecting||b.status==RedirectionStatus.Binding?(logger_1.logger.log("Waiting for start redirection to finish"),b.waitUntilRedirected(15).then(function(){logger_1.logger.log("Waiting for start redirection: success");
d()})["catch"](function(){logger_1.logger.log("Waiting for start redirection: failed");f();a()})):(logger_1.logger.log("Redirection already started."),d())})};a.prototype.suspendRedirection=function(c){logger_1.logger.log("Suspending redirection.");(0,window.onVdiClientDisconnected)();this.status===RedirectionStatus.Redirected&&this.pingConnectionBegin();logger_1.logger.log("Redirection status: NotRedirected");this.status=RedirectionStatus.NotRedirected};a.prototype.onWSOpen=function(){};a.prototype.onWSClose=
function(c){logger_1.logger.log("disconnected from websocket service.");try{this.suspendRedirection(!0)}catch(e){logger_1.logger.log("suspendRedirection(): exception closing WebSocket: "+e.message)}};a.prototype.onWSError=function(){try{this.suspendRedirection(!0)}catch(c){logger_1.logger.log("suspendRedirection(): exception on WebSocket error: "+c.message)}};a.prototype.WSSendObjectWrapper=function(c,e,b,a){var d=!0;e!=webrpcclassinfo_1.class_id_t.EngineControl||b!=webrpcclassinfo_1.method_id_EngineControl_t.ctor&&
b!=webrpcclassinfo_1.method_id_EngineControl_t.version&&b!=webrpcclassinfo_1.method_id_EngineControl_t.feature_flags||(d=!1);var f=!0;if(d&&(f=!1,void 0!=this.features))for(var d=0,h=this.features;d<h.length;d++){var k=h[d];if(!0===k.value&&k.name==c){f=!0;break}}return 1==f?this.WSSendObject(a):Promise.reject("Cannot invoke method that is not supported by webrpc: iid("+e+") mid("+b+")")};a.prototype.WSSendObject=function(c){var e=this;return new Promise(function(b,a){if("webrtc"==c.v){var d=c.hdr.proc.iid,
f=c.hdr.proc.methodid,h=c.objref.oid,k=c.hdr.destroy;c.hdr.modifier||k||(d=new completion(b,a,d,h,0,!0,f),e.reqs.push(d));d=JSON.stringify(c);logger_1.logger.trace("WSSendObject: >>> "+webrpcclassinfo_1.WebrpcClassLibInfoUtil.composeClassInfoData(c)+" "+d);try{e.websocket.send(d)}catch(l){logger_1.logger.log("WSSendObject(): exception: "+l.message),a(l.message)}}else"overlay"==c.v?(d=JSON.stringify(c),logger_1.logger.log("HDXMS: SendOverlayData: >>> "+d+"'"),e.websocket.send(d)):logger_1.logger.log("HDXMS: Unknown protocol: '"+
JSON.stringify(c)+"'")})};a.prototype.onWSMessage=function(c){var a=c.data,b;try{b=JSON.parse(a)}catch(k){console.log("invalid JSON!!!"),console.log(k),console.log(a)}if("webrtc"==b.v){logger_1.logger.trace("onWSMessage: <<< "+webrpcclassinfo_1.WebrpcClassLibInfoUtil.composeClassInfoData(b)+" "+a);var g=b.hdr.proc.iid,d=b.hdr.proc.methodid,f=b.objref.oid;c=b.status;if(b.hdr.msg_type==wsjsonutil_1.WsJsonUtil.getMsgType(wsjsonutil_1.ws_msg_type_t.reply))a=this.reqs.findIndex(function(a){return a.iid==
g&&a.oid==f&&a.mid==d}),0<=a?0==c?this.reqs.splice(a,1).shift().resolve(b):this.reqs.splice(a,1).shift().reject():(logger_1.logger.log("HDXMS didnt find this one. (reqs)"),logger_1.logger.log(this.reqs));else if(b.hdr.msg_type==wsjsonutil_1.WsJsonUtil.getMsgType(wsjsonutil_1.ws_msg_type_t.event_req)){var h=b.func.id,a=this.cbs.findIndex(function(a){return a.iid==g&&a.oid==f&&a.cbid==h>>16});0<=a?(0==(h&65535)?this.cbs[a].resolve(b):this.cbs[a].reject(),1==this.cbs[a].oneShot&&this.cbs.splice(a,1)):
(logger_1.logger.log("HDXMS didnt find this one. (cbs)"),logger_1.logger.log(this.cbs))}else logger_1.logger.log("HDXMS Received bogus message: "+a+"'")}else logger_1.logger.log("HDXMS: Unknown protocol: "+a+"'")};a.prototype.registerHandler=function(a,e,b){a=new completion(b.resolve.bind(b),b.reject.bind(b),a,e,b.id,b.oneShot,0);this.cbs.push(a)};a.prototype.unregisterHandler=function(a,e,b){var g=this.cbs.findIndex(function(d){return d.iid==a&&d.oid==e&&d.cbid==b});0<=g?this.cbs.splice(g,1):(logger_1.logger.log("HDXMS Didnt find this callback in the list!"),
console.log(this.cbs))};a.prototype.isRedirected=function(){return this.status===RedirectionStatus.Redirected||this.status===RedirectionStatus.Binding||this.status===RedirectionStatus.Connecting};a.prototype.isPingActive=function(){return this.pingactive};a.prototype.pingConnectionBegin=function(){this.pingactive=!0;this.conntimer=setTimeout(function(){logger_1.logger.log("checking if we are connected...");(0,window.onVdiClientDisconnectedTimer)()},15E3)};a.prototype.pingConnectionEnd=function(){this.pingactive=
!1;clearTimeout(this.conntimer)};return a}();exports.HdxMediaStream=HdxMediaStream;var hdxMediaStream=new HdxMediaStream;function getRedirector(){return hdxMediaStream}exports.getRedirector=getRedirector;
